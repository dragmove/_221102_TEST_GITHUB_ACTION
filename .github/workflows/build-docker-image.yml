name: Build Docker Image

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - 'epic/**'

jobs:
  update_version:
    name: Update package version
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # outputs:
    #   package_version: ${{steps.define-variables.outputs.package_version}}
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
    
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
    
      - name: Configuration
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Define variables
        id: define-variables
        run: |
          echo "PACKAGE_VERSION=$(grep version package.json | awk -F \" '{print $4}')" >> "$GITHUB_OUTPUT"
      
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: nop-ecr-repo
          IMAGE_TAG: "${{ steps.define-variables.outputs.PACKAGE_VERSION }}-alpha.${{ github.event.pull_request.head.sha }}-epic.NOP-{ticket_number}"
        run: |
          echo "REGISTRY: ${REGISTRY}"
          echo "REPOSITORY: ${REPOSITORY}"
          echo "IMAGE_TAG: ${IMAGE_TAG}"

    # steps:
    #   - name: echo a string
    #     run: echo "hello world!!!"
    #   - name: multiline script
    #     run: |
    #       node -v
    #       npm -v
    #   - name: echo github sha
    #     run: |
    #       echo "GITHUB_SHA: ${GITHUB_SHA}"
    #       echo "head branch last commit sha: ${{ github.event.pull_request.head.sha }}"
    #       echo "github.sha: ${{github.sha}}"