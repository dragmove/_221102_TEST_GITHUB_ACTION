name: Build Docker Image

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - "epic/**"

jobs:
  update_version:
    name: Update package version
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # outputs:
    #   package_version: ${{steps.define-variables.outputs.package_version}}
    strategy:
      matrix:
        node-version: [16.x]

    permissions: # @see https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#adding-permissions-settings
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configuration
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      #   - name: Configure AWS credentials
      #     uses: aws-actions/configure-aws-credentials@v2
      #     with:
      #       role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      #       aws-region: ${{ secrets.AWS_REGION }}

      #   - name: Login to Amazon ECR # Check IAM policy - @see https://docs.aws.amazon.com/ko_kr/aws-managed-policy/latest/reference/AmazonEC2ContainerRegistryReadOnly.html
      #     id: login-ecr
      #     uses: aws-actions/amazon-ecr-login@v1

      - name: Define variables
        id: define-variables
        run: |
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"

          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.base_ref: ${{ github.base_ref }}"
          echo "github.sha: ${{github.sha}}"
          echo "head branch last commit sha: ${{ github.event.pull_request.head.sha }}"

          echo "PACKAGE_VERSION=$(grep version package.json | awk -F \" '{print $4}')" >> "$GITHUB_OUTPUT"
          echo "HEAD_COMMIT_SHA=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

          git fetch --depth=1 origin develop

          DEVELOP_BRANCH_HASH=$(git rev-parse origin/develop)
          echo "DEVELOP_BRANCH_HASH=${DEVELOP_BRANCH_HASH}" >> "$GITHUB_OUTPUT"

          echo "INTEGRATED_VERSION=$(node ./scripts/update-commit.js integrate-version ${{ github.base_ref }} ${{ github.sha }} ${DEVELOP_BRANCH_HASH})" >> "$GITHUB_OUTPUT"

      - name: Update package.json
        if: ${{ github.head_ref != 'main' }}
        env:
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_ACTOR: ${{ github.actor }}
          INTEGRATED_VERSION: ${{ steps.define-variables.outputs.INTEGRATED_VERSION }}
          IS_GITHUB_ACTIONS: "true"
        shell: bash
        run: |
          echo "PACKAGE_VERSION: ${{ steps.define-variables.outputs.PACKAGE_VERSION }}"
          echo "HEAD_COMMIT_SHA: ${{ steps.define-variables.outputs.HEAD_COMMIT_SHA }}"
          echo "DEVELOP_BRANCH_HASH: ${{ steps.define-variables.outputs.DEVELOP_BRANCH_HASH }}"

          echo "GITHUB_BASE_REF: ${GITHUB_BASE_REF}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "INTEGRATED_VERSION: ${INTEGRATED_VERSION}"
          echo "IS_GITHUB_ACTIONS: ${IS_GITHUB_ACTIONS}"

          chmod +x ./scripts/update-version.sh
          ./scripts/update-version.sh

    #   - name: Build, tag, and push docker image to Amazon ECR
    #     env:
    #       REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #       REPOSITORY: nop-ecr-repo
    #       IMAGE_TAG: "${{ steps.define-variables.outputs.PACKAGE_VERSION }}-alpha.${{ steps.define-variables.outputs.HEAD_COMMIT_SHA }}-epic.NOP-{ticket_number}"
    #     run: |
    #       echo "REGISTRY: ${REGISTRY}"
    #       echo "REPOSITORY: ${REPOSITORY}"
    #       echo "IMAGE_TAG: ${IMAGE_TAG}"

    # steps:
    #   - name: echo a string
    #     run: echo "hello world!!!"
    #   - name: multiline script
    #     run: |
    #       node -v
    #       npm -v
    #   - name: echo github sha
    #     run: |
    #       echo "GITHUB_SHA: ${GITHUB_SHA}"
    #       echo "head branch last commit sha: ${{ github.event.pull_request.head.sha }}"
    #       echo "github.sha: ${{github.sha}}"
